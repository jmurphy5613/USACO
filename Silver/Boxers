#include <iostream>
#include <fstream>
#include <vector>
#include <unordered_map>
#include <cassert>
#include <algorithm>
#include <set>
#include <string>
#include <unordered_set>
using namespace std;

int main(void)
{
    ifstream fin("lemonade.in");
    ofstream fout("lemonade.out");
    int n;
    cin >> n;
    vector<int> boxers(n);
    for (int i = 0; i < n; i++)
    {
        cin >> boxers[i];
    }
    sort(boxers.begin(), boxers.end());
    vector<int> taken;
    for (int i = 0; i < n; i++)
    {
        int current = boxers[i];
        if (find(taken.begin(), taken.end(), current - 1) == taken.end() && current != 1)
        {
            taken.push_back(current - 1);
        }
        else if (find(taken.begin(), taken.end(), current) == taken.end())
        {
            taken.push_back(current);
        }
        else if (find(taken.begin(), taken.end(), current + 1) == taken.end())
        {
            taken.push_back(current + 1);
        }
    }
    cout << taken.size();
}
