#include <fstream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <set>
#include <string>
#include <unordered_set>
#include <queue>
#include <iostream>
#include <stack>
using namespace std;

int main(void)
{
	int A, B, C;
	vector<int> nums(7);
	for (int i = 0; i < 7; i++) cin >> nums[i];

	int lowest = nums[0];
	int j = 0;
	for (int i = 0; i < 7; i++) if (lowest > nums[i]) { lowest = nums[i]; j = i; }

	nums.erase(nums.begin() + j);
	sort(nums.begin(), nums.end());
	A = lowest;
	bool b = false;
	int p = 0;
	int x = 0;
	for (int i = 0; i < 6; i++)
	{
		int looking = nums[i] - A;
		for (int y = 0; y < 6; y++)
		{
			if (nums[y] == looking && nums[y] >= A)
			{
				B = nums[y];
				b = true;
				p = y;
				break;
			}
		}
		if (b) { x = nums[i]; break; }
	}
	nums.erase(nums.begin() + p);
	for (int i = 0; i < 5; i++)
	{
		if (nums[i] == x) { nums.erase(nums.begin() + i); break; }
	}
	sort(nums.begin(), nums.end());
	int AB = A + B;
	b = false;
	for (int i = 0; i < 4; i++)
	{
		int looking2 = nums[i] - AB;
		for (int j = 0; j < 4; j++)
		{
			if (nums[j] == looking2 && nums[j] >= B)
			{
				C = nums[j];
				b = true;
				break;
			}
		}
		if (b) break;
	}

	cout << A << " " << B << " " << C;
	

}
/* THOUGHT PROCESS:
*/
