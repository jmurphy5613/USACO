#include <fstream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <set>
#include <string>
#include <unordered_set>
#include <queue>
#include <iostream>
#include <stack>
using namespace std;
int Nspeeds[101];
int Mspeeds[101];
int main(void)
{
	ifstream fin("speeding.in");
	ofstream fout("speeding.out");
	int N, M, length, speed;
	fin >> N >> M;
	int last = 1;
	for (int i = 0; i < N; i++)
	{
		fin >> length >> speed;
		for (int j = last; j <= length + last; j++)
		{
			Nspeeds[j] = speed;
		}
		last += length;
	}
	last = 1;
	for (int i = 0; i < M; i++)
	{
		fin >> length >> speed;
		for (int j = last; j <= length + last; j++)
		{
			Mspeeds[j] = speed;
		}
		last += length;
	}
	int largestDifference = 0;
	for (int i = 0; i < 100; i++)
	{
		int dif = 0;
		if (Mspeeds[i] > Nspeeds[i]) dif = abs(Mspeeds[i] - Nspeeds[i]);
		if (dif > largestDifference) largestDifference = dif;
	}
	fout << largestDifference;

}
/* THOUGHT PROCESS:
*/
